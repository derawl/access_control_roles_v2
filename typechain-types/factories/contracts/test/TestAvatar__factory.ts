/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestAvatar,
  TestAvatarInterface,
} from "../../../contracts/test/TestAvatar";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModuleReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506105c38061001d5f395ff3fe608060405260043610610036575f3560e01c8063468721a7146100415780635229073f14610075578063c55cbe89146100a2575f80fd5b3661003d57005b5f80fd5b34801561004c575f80fd5b5061006061005b366004610383565b6100c3565b60405190151581526020015b60405180910390f35b348015610080575f80fd5b5061009461008f36600461042f565b61019a565b60405161006c929190610528565b3480156100ad575f80fd5b506100c16100bc366004610383565b610270565b005b5f8160ff1660010361013157856001600160a01b031684846040516100e9929190610563565b5f60405180830381855af49150503d805f8114610121576040519150601f19603f3d011682016040523d82523d5f602084013e610126565b606091505b505080915050610191565b856001600160a01b031685858560405161014c929190610563565b5f6040518083038185875af1925050503d805f8114610186576040519150601f19603f3d011682016040523d82523d5f602084013e61018b565b606091505b50909150505b95945050505050565b5f60608260ff1660010361020857856001600160a01b0316846040516101c09190610572565b5f60405180830381855af49150503d805f81146101f8576040519150601f19603f3d011682016040523d82523d5f602084013e6101fd565b606091505b505080925050610267565b856001600160a01b031685856040516102219190610572565b5f6040518083038185875af1925050503d805f811461025b576040519150601f19603f3d011682016040523d82523d5f602084013e610260565b606091505b5090925090505b94509492505050565b5f60608260ff166001036102e057866001600160a01b03168585604051610298929190610563565b5f60405180830381855af49150503d805f81146102d0576040519150601f19603f3d011682016040523d82523d5f602084013e6102d5565b606091505b505080925050610341565b866001600160a01b03168686866040516102fb929190610563565b5f6040518083038185875af1925050503d805f8114610335576040519150601f19603f3d011682016040523d82523d5f602084013e61033a565b606091505b5090925090505b8161034e57805160208201fd5b50505050505050565b6001600160a01b038116811461036b575f80fd5b50565b803560ff8116811461037e575f80fd5b919050565b5f805f805f60808688031215610397575f80fd5b85356103a281610357565b945060208601359350604086013567ffffffffffffffff808211156103c5575f80fd5b818801915088601f8301126103d8575f80fd5b8135818111156103e6575f80fd5b8960208285010111156103f7575f80fd5b60208301955080945050505061040f6060870161036e565b90509295509295909350565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215610442575f80fd5b843561044d81610357565b935060208501359250604085013567ffffffffffffffff80821115610470575f80fd5b818701915087601f830112610483575f80fd5b8135818111156104955761049561041b565b604051601f8201601f19908116603f011681019083821181831017156104bd576104bd61041b565b816040528281528a60208487010111156104d5575f80fd5b826020860160208301375f6020848301015280965050505050506104fb6060860161036e565b905092959194509250565b5f5b83811015610520578181015183820152602001610508565b50505f910152565b8215158152604060208201525f825180604084015261054e816060850160208701610506565b601f01601f1916919091016060019392505050565b818382375f9101908152919050565b5f8251610583818460208701610506565b919091019291505056fea26469706673582212201f8ae9ae4969ac84925287b0073b8aaa889caac8a6fec0e445447f411f8828b864736f6c63430008150033";

type TestAvatarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAvatarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAvatar__factory extends ContractFactory {
  constructor(...args: TestAvatarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestAvatar> {
    return super.deploy(overrides || {}) as Promise<TestAvatar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestAvatar {
    return super.attach(address) as TestAvatar;
  }
  override connect(signer: Signer): TestAvatar__factory {
    return super.connect(signer) as TestAvatar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAvatarInterface {
    return new utils.Interface(_abi) as TestAvatarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAvatar {
    return new Contract(address, _abi, signerOrProvider) as TestAvatar;
  }
}
